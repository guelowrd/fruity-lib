use dep::std;

global MAX_ARRAY_SIZE: Field = 20;

fn get_max_array_size() -> Field {
    MAX_ARRAY_SIZE
}

fn check_commitment(commitment: Field, set: [Field; MAX_ARRAY_SIZE]) {
    let computed_commitment = std::hash::pedersen(set);
    assert(commitment == computed_commitment[0]);
}

fn get_intersection_cardinality(private_set_a : [Field; MAX_ARRAY_SIZE], private_set_b : [Field; MAX_ARRAY_SIZE]) -> Field {
    let mut cardinality: Field = 0;
    for i in 0..MAX_ARRAY_SIZE {
        for j in 0..MAX_ARRAY_SIZE {
            // We only need to check that private_set_a[i] != 0, as if this condition holds
            // then private_set_a[i] == private_set_b[j] implies that private_set_b[j] != 0.
            if (private_set_a[i] != 0) & (private_set_a[i] as u64 == private_set_b[j] as u64) {
                cardinality += 1;
            }
        }
    }
    cardinality
}

fn private_set_intersection_is_not_empty(
    // A pedersen hash of the first set of hashed elements
    // serving as a public commitment to the first set
    commitment_a: Field, 
    // A pedersen hash of the second set of hashed elements
    // serving as a public commitment to the second set
    commitment_b: Field, 
    // First set of hashed elements (can be any hash function)
    private_set_a: [Field; MAX_ARRAY_SIZE], 
    // Second set of hashed elements (can be any hash function)
    private_set_b: [Field; MAX_ARRAY_SIZE],
    // Second set of hashed elements (can be any hash function)
    intersection_is_empty: bool
) {
    // Check that the commitments are valid
    check_commitment(commitment_a, private_set_a);
    check_commitment(commitment_b, private_set_b);
    // Retrieve the cardinality of the intersection, if there is any
    let cardinality = get_intersection_cardinality(private_set_a, private_set_b);
    // Make sure the proof will only succeed if the intersection is non-empty
    if intersection_is_empty {
        assert(cardinality == 0);
    } else {
        assert(cardinality != 0);
    }
}

#[test]
fn test_private_set_intersection_is_empty() {
    let private_set_a: [Field; MAX_ARRAY_SIZE] = [0xb74e2884bd845cc06bc0e2fc2841fc5015865ef7b84688dbcb700b84ac216c22,0x0000000000000000000000000000000000000000000000000000000000000000,0xf3d1edb7c28457ca230e195689fe4f735229f3c4e465e08467815e8bc56584a8,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000];
    let private_set_b: [Field; MAX_ARRAY_SIZE] = [0x0000000000000000000000000000000000000000000000000000000000000000,0xd1a76970243ed6fa98d5609955ebb75d21fa1e834afc6e72197392014a4f0fbc,0x1a5203a4da0667310353cb45e76f30f733bb2789487f8fdf11f68edd057b5e19,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000];   
    let pub_commitment_a: Field = 0x16ad1d69b4502e3285c21a34da7c3b3cade1307aa22b62218eb01b38b51eebce;
    let pub_commitment_b: Field = 0x18398d61bdfc65f29b57346e3ef7c78b7637ee5a50e62cd5506b0df42c9ef8e7;
    let intersection_is_empty: bool = true;
    private_set_intersection_is_not_empty(pub_commitment_a, pub_commitment_b, private_set_a, private_set_b, intersection_is_empty);
}

#[test]
fn test_private_set_intersection_is_not_empty() {
    let pub_commitment_a: Field = 0x26ed5e1af87ec150f8f69345f4b4db8ae49fea36516f72403ed590fa1bfe3570;
    let pub_commitment_b: Field = 0x0f3fc7cbde26e9f4972e074591a3aa2e3e125e71285aad8174bd73aeb0876d5f;
    let private_set_a: [Field; MAX_ARRAY_SIZE] = [0xb74e2884bd845cc06bc0e2fc2841fc5015865ef7b84688dbcb700b84ac216c22,0xd5bc4f28142b87c37b07862dd864ca3923a16ce9a72597297bed636d7e127851,0xf3d1edb7c28457ca230e195689fe4f735229f3c4e465e08467815e8bc56584a8,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000];
    let private_set_b: [Field; MAX_ARRAY_SIZE] = [0xd5bc4f28142b87c37b07862dd864ca3923a16ce9a72597297bed636d7e127851,0xd1a76970243ed6fa98d5609955ebb75d21fa1e834afc6e72197392014a4f0fbc,0x1a5203a4da0667310353cb45e76f30f733bb2789487f8fdf11f68edd057b5e19,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000,0x0000000000000000000000000000000000000000000000000000000000000000];   
    let intersection_is_empty: bool = false;
    private_set_intersection_is_not_empty(pub_commitment_a, pub_commitment_b, private_set_a, private_set_b, intersection_is_empty);
}

#[test]
fn test_get_max_array_size() {
    let expected_max_array_size: Field = 20;
    let max_array_size: Field = get_max_array_size();
    assert(max_array_size == expected_max_array_size);
}